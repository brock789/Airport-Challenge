As an air traffic controller 
So I can get passengers to a destination 
I want to instruct a plane to land at an airport
verbs = get, instruct, land
nouns = passengers, destination, plane, airport

As an air traffic controller 
So I can get passengers on the way to their destination 
I want to instruct a plane to take off from an airport and confirm that it is no longer in the airport
verbs = get, instruct, take off, confirm
nouns = passengers, plane, aiport, 

As an air traffic controller 
To ensure safety 
I want to prevent landing when the airport is full 
verbs = ensure, prevent landing
nouns = safety, airport

As the system designer
So that the software can be used for many different airports
I would like a default airport capacity that can be overridden as appropriate
verbs = used, overridden
nouns = software, airports, capacity.

As an air traffic controller 
To ensure safety 
I want to prevent takeoff when weather is stormy 
verbs = ensure, prevent
nouns = takeoff, weather

As an air traffic controller 
To ensure safety 
I want to prevent landing when weather is stormy 

verbs = ensure, prevent
nouns = landing, weather

Potential actions:
air traffic controller  
    instructlanding_at_airport
    instruct_takeoff_from_airport
    
    confirm_leftairport
    prevent_landing_when_airportfull
    prevent_landing_when_stormy
    prevent_takeoff_when_stormy
system designer  
    override_default_capacity

Note: requirement for weather to be emulated - potentially in tests first.
INPUTS


EDGE CASES - 
no planes in aiport
over capacity
instructs to land at a different airport

that planes can only take off from airports they are in
planes that are already flying cannot take off and/or be in an airport;
planes that are landed cannot land again and must be in an airport, etc
may need additional variables such as inflight and landed to monitor this.

Classes Needed and pseudo code
Airport 
INPUTS
will need to define variables such as capacity, inflight and landed and airport at.
will need to assess if needed outside of class or not
METHODS
  instructlanding_at_airport
    call prevent landing when stormy then do not land if true, else land, set airport variable, , set landed/flying variable
  instruct_takeoff_from_airport
    check if stormy then do not take off. if takeoff, set airport variable, set  landed/flying variable
  confirm_leftairport
    not required, as variable will be set to monitor this, e.g. flying / landed.
  prevent_landing_when_airportfull
    check if > capacity if plane lands and return message.
  prevent_landing_when_stormy - return true if stormy.
  prevent_takeoff_when_stormy - return true if stormy ** potential to merge with above method for landing
instruct landing
Weather *potentially if implemented, and not just done through testing at this stage.
  INPUTS number from 1-10, or default uses the rand(10) generation
  ##not, if not using doubles in rspec, this could take an input argument
  weather_is_stormy
    Returns stormy rarely, and OK otherwise. Potential to use rand(10) to generate this where 10 is Stormy. Return True if stormy
  OUTPUT TRUE / FALSE